{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruns\\\\Desktop\\\\FRONT_PETHEAVEN\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./AuthContext\";\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from \"jwt-decode\"; // Importación nombrada correcta\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '471447306458-j42j2q10c6b0ukglpu0bcg5kb6i9ben2.apps.googleusercontent.com';\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    setIsAuthenticated\n  } = useAuth();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3000/api/login\", {\n        correo: email,\n        password\n      });\n      if (response.data.token) {\n        localStorage.setItem(\"token\", response.data.token);\n        setIsAuthenticated(true);\n        navigate(\"/\");\n      } else {\n        setErrorMessage(\"Login fallido. Verifica tus credenciales.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"Error al iniciar sesión. Por favor, inténtalo de nuevo.\");\n    }\n  };\n  const onSuccess = async credentialResponse => {\n    try {\n      const decodedToken = jwtDecode(credentialResponse.credential); // Uso correcto de jwtDecode\n      const {\n        picture\n      } = decodedToken;\n      const res = await axios.post(\"http://localhost:3000/api/google-login\", {\n        tokenId: credentialResponse.credential\n      });\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"avatarUrl\", picture);\n        setIsAuthenticated(true);\n        navigate(\"/\");\n      } else {\n        setErrorMessage(\"Error en la autenticación con Google.\");\n      }\n    } catch (error) {\n      setErrorMessage(\"Error al autenticar con Google.\");\n    }\n  };\n  const onFailure = error => {\n    setErrorMessage(\"Error al iniciar sesión con Google. Por favor, inténtalo de nuevo.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Correo Electr\\xF3nico:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Contrase\\xF1a:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Iniciar Sesi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n              clientId: clientId,\n              children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n                onSuccess: onSuccess,\n                onError: onFailure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/img/petlogo.png\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"/5BiFdI8CsBqDgutyQ/phiZZ8wg=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useAuth","GoogleOAuthProvider","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","clientId","Login","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","setIsAuthenticated","handleLogin","e","preventDefault","response","post","correo","data","token","localStorage","setItem","error","onSuccess","credentialResponse","decodedToken","credential","picture","res","tokenId","onFailure","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","onError","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/aruns/Desktop/FRONT_PETHEAVEN/src/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\nimport { jwtDecode } from \"jwt-decode\";  // Importación nombrada correcta\r\nimport \"./Login.css\";\r\n\r\nconst clientId = '471447306458-j42j2q10c6b0ukglpu0bcg5kb6i9ben2.apps.googleusercontent.com';\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { setIsAuthenticated } = useAuth();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/api/login\", {\r\n        correo: email,\r\n        password,\r\n      });\r\n\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setIsAuthenticated(true);\r\n        navigate(\"/\");  \r\n      } else {\r\n        setErrorMessage(\"Login fallido. Verifica tus credenciales.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"Error al iniciar sesión. Por favor, inténtalo de nuevo.\");\r\n    }\r\n  };\r\n\r\n  const onSuccess = async (credentialResponse) => {\r\n    try {\r\n      const decodedToken = jwtDecode(credentialResponse.credential);  // Uso correcto de jwtDecode\r\n      const { picture } = decodedToken;\r\n\r\n      const res = await axios.post(\"http://localhost:3000/api/google-login\", {\r\n        tokenId: credentialResponse.credential,\r\n      });\r\n\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        localStorage.setItem(\"avatarUrl\", picture);\r\n        setIsAuthenticated(true);\r\n        navigate(\"/\");  \r\n      } else {\r\n        setErrorMessage(\"Error en la autenticación con Google.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"Error al autenticar con Google.\");\r\n    }\r\n  };\r\n\r\n  const onFailure = (error) => {\r\n    setErrorMessage(\"Error al iniciar sesión con Google. Por favor, inténtalo de nuevo.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <div className=\"login-form\">\r\n          <h1>Iniciar Sesión</h1>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Correo Electrónico:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Contraseña:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n            <div className=\"buttons-container\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">Iniciar Sesión</button>\r\n              <GoogleOAuthProvider clientId={clientId}>\r\n                <GoogleLogin onSuccess={onSuccess} onError={onFailure} />\r\n              </GoogleOAuthProvider>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"login-logo\">\r\n          <img src=\"/assets/img/petlogo.png\" alt=\"Logo\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}