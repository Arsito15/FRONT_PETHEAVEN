{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Solve\\\\OneDrive\\\\Escritorio\\\\semestre 8\\\\desarrollo web\\\\react\\\\FRONT_PETHEAVEN\\\\src\\\\pages\\\\MascotaForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../AuthContext\";\nimport \"./MascotaForm.css\"; // Archivo CSS específico para los estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MascotaForm() {\n  _s();\n  const {\n    userData\n  } = useAuth(); // Datos del usuario desde el contexto\n  const [mascotaFormData, setMascotaFormData] = useState({\n    nombreMascota: \"\",\n    especie: \"\",\n    raza: \"\",\n    edad: \"\",\n    peso: \"\",\n    sexo: \"\",\n    categoria: \"\",\n    avatarUrl: \"\",\n    propietarioId: \"\",\n    // Para asociar la mascota con el propietario\n    emailPropietario: \"\" // Mostrar el correo del propietario\n  });\n  const [mascotas, setMascotas] = useState([]); // Estado para almacenar mascotas registradas\n  const [selectedFile, setSelectedFile] = useState(null); // Estado para el archivo de imagen\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const fileInputRef = useRef(null); // Referencia al input para subir imágenes\n\n  useEffect(() => {\n    if (userData) {\n      // Asegurarnos de que el formulario reciba el ID del propietario y su email\n      setMascotaFormData({\n        ...mascotaFormData,\n        propietarioId: userData.USUARIO_ID || \"\",\n        // Obtener el ID del propietario desde los datos del usuario\n        emailPropietario: userData.CORREO || \"\" // Obtener el correo del propietario desde los datos del usuario\n      });\n\n      // Obtener las mascotas registradas para el propietario\n      axios.get(`http://localhost:3000/api/mascotas/${userData.USUARIO_ID}`).then(response => {\n        console.log('Mascotas obtenidas:', response.data); // Verifica la estructura de los datos aquí\n        setMascotas(response.data); // Almacenar las mascotas en el estado\n      }).catch(error => {\n        console.error(\"Error al obtener las mascotas del usuario:\", error);\n      });\n    }\n  }, [userData]); // Se ejecuta cuando se actualizan los datos del usuario\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMascotaFormData({\n      ...mascotaFormData,\n      [name]: value\n    });\n  };\n\n  // Manejo del archivo seleccionado\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file); // Guardar el archivo en el estado\n      const imageUrl = URL.createObjectURL(file); // Crear una URL temporal para mostrar la imagen seleccionada\n      setMascotaFormData({\n        ...mascotaFormData,\n        avatarUrl: imageUrl\n      });\n    }\n  };\n\n  // Enviar datos al backend\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Crear un FormData para enviar los datos y la imagen\n    const formData = new FormData();\n    formData.append(\"nombreMascota\", mascotaFormData.nombreMascota);\n    formData.append(\"especie\", mascotaFormData.especie);\n    formData.append(\"raza\", mascotaFormData.raza);\n    formData.append(\"edad\", mascotaFormData.edad);\n    formData.append(\"peso\", mascotaFormData.peso);\n    formData.append(\"sexo\", mascotaFormData.sexo);\n    formData.append(\"categoria\", mascotaFormData.categoria);\n    formData.append(\"avatarUrl\", mascotaFormData.avatarUrl); // Agregar la URL actual si no se ha subido una imagen\n    formData.append(\"propietarioId\", mascotaFormData.propietarioId); // Asociar la mascota al usuario actual\n\n    // Solo agregar el archivo si se seleccionó uno\n    if (selectedFile) {\n      formData.append(\"file\", selectedFile);\n    }\n    try {\n      // Realizar la petición POST al servidor\n      await axios.post(\"http://localhost:3000/api/mascotas/nueva\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSuccessMessage(\"Mascota registrada correctamente.\");\n      window.location.reload(); // Refrescar la página al registrar una nueva mascota\n    } catch (error) {\n      setErrorMessage(\"Error al registrar la mascota. Intenta nuevamente.\");\n      console.error(\"Error al registrar la mascota:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mascota-form__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mascota-form__owner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mascota-form__owner\",\n        children: \"Propietario:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mascota-form__email\",\n        children: mascotaFormData.emailPropietario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mascota-form__form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mascota-form__title\",\n        children: \"Registrar Nueva Mascota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"mascota-form__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mascota-form__form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"avatar\",\n            className: \"mascota-form__label\",\n            children: \"Agregar Foto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            className: \"mascota-form__input-file\",\n            onChange: handleFileChange,\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mascota-form__avatar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: mascotaFormData.avatarUrl || \"https://via.placeholder.com/150\",\n            alt: \"Mascota Avatar\",\n            className: \"mascota-form__avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mascota-form__avatar-overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mascota-form__form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nombreMascota\",\n            className: \"mascota-form__label\",\n            children: \"Nombre *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nombreMascota\",\n            name: \"nombreMascota\",\n            className: \"mascota-form__input\",\n            value: mascotaFormData.nombreMascota,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mascota-form__btn btn btn-primary mt-3\",\n          children: \"Registrar Mascota\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mascota-form__success-message text-success\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 30\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mascota-form__error-message text-danger\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mascotas__container\",\n      children: mascotas.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mascotas__list\",\n        children: mascotas.map(mascota => {\n          const avatarUrl = mascota[10] || \"https://via.placeholder.com/150\"; // Verificar si tiene imagen\n          const completeAvatarUrl = avatarUrl.startsWith('http') ? avatarUrl // Si es una URL externa\n          : `http://localhost:3000${avatarUrl}`; // Si es una imagen en el servidor\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mascota__card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: completeAvatarUrl,\n              alt: \"Mascota Avatar\",\n              className: \"mascota__card-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mascota__card-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: mascota[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Especie: \", mascota[3]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Edad: \", mascota[7], \" a\\xF1os\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Peso: \", mascota[5], \" kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Categor\\xEDa: \", mascota[9]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                children: \"Ver Detalles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, mascota[0], true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tienes mascotas registradas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(MascotaForm, \"PaStX5cMYzmRpiZAso+oPAp9QoE=\", false, function () {\n  return [useAuth];\n});\n_c = MascotaForm;\nvar _c;\n$RefreshReg$(_c, \"MascotaForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","useAuth","jsxDEV","_jsxDEV","MascotaForm","_s","userData","mascotaFormData","setMascotaFormData","nombreMascota","especie","raza","edad","peso","sexo","categoria","avatarUrl","propietarioId","emailPropietario","mascotas","setMascotas","selectedFile","setSelectedFile","successMessage","setSuccessMessage","errorMessage","setErrorMessage","fileInputRef","USUARIO_ID","CORREO","get","then","response","console","log","data","catch","error","handleInputChange","e","name","value","target","handleFileChange","file","files","imageUrl","URL","createObjectURL","handleSubmit","preventDefault","formData","FormData","append","post","headers","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","ref","onChange","accept","src","alt","id","required","length","map","mascota","completeAvatarUrl","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/Solve/OneDrive/Escritorio/semestre 8/desarrollo web/react/FRONT_PETHEAVEN/src/pages/MascotaForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../AuthContext\";\r\nimport \"./MascotaForm.css\";  // Archivo CSS específico para los estilos\r\n\r\nexport default function MascotaForm() {\r\n  const { userData } = useAuth();  // Datos del usuario desde el contexto\r\n  const [mascotaFormData, setMascotaFormData] = useState({\r\n    nombreMascota: \"\",\r\n    especie: \"\",\r\n    raza: \"\",\r\n    edad: \"\",\r\n    peso: \"\",\r\n    sexo: \"\",\r\n    categoria: \"\",\r\n    avatarUrl: \"\",\r\n    propietarioId: \"\",  // Para asociar la mascota con el propietario\r\n    emailPropietario: \"\",  // Mostrar el correo del propietario\r\n  });\r\n  const [mascotas, setMascotas] = useState([]);  // Estado para almacenar mascotas registradas\r\n  const [selectedFile, setSelectedFile] = useState(null);  // Estado para el archivo de imagen\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const fileInputRef = useRef(null);  // Referencia al input para subir imágenes\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      // Asegurarnos de que el formulario reciba el ID del propietario y su email\r\n      setMascotaFormData({\r\n        ...mascotaFormData,\r\n        propietarioId: userData.USUARIO_ID || \"\",  // Obtener el ID del propietario desde los datos del usuario\r\n        emailPropietario: userData.CORREO || \"\",  // Obtener el correo del propietario desde los datos del usuario\r\n      });\r\n\r\n      // Obtener las mascotas registradas para el propietario\r\n      axios.get(`http://localhost:3000/api/mascotas/${userData.USUARIO_ID}`)\r\n        .then((response) => {\r\n          console.log('Mascotas obtenidas:', response.data);  // Verifica la estructura de los datos aquí\r\n          setMascotas(response.data);  // Almacenar las mascotas en el estado\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error al obtener las mascotas del usuario:\", error);\r\n        });\r\n    }\r\n  }, [userData]);  // Se ejecuta cuando se actualizan los datos del usuario\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMascotaFormData({\r\n      ...mascotaFormData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Manejo del archivo seleccionado\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);  // Guardar el archivo en el estado\r\n      const imageUrl = URL.createObjectURL(file);  // Crear una URL temporal para mostrar la imagen seleccionada\r\n      setMascotaFormData({\r\n        ...mascotaFormData,\r\n        avatarUrl: imageUrl,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Enviar datos al backend\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Crear un FormData para enviar los datos y la imagen\r\n    const formData = new FormData();\r\n    formData.append(\"nombreMascota\", mascotaFormData.nombreMascota);\r\n    formData.append(\"especie\", mascotaFormData.especie);\r\n    formData.append(\"raza\", mascotaFormData.raza);\r\n    formData.append(\"edad\", mascotaFormData.edad);\r\n    formData.append(\"peso\", mascotaFormData.peso);\r\n    formData.append(\"sexo\", mascotaFormData.sexo);\r\n    formData.append(\"categoria\", mascotaFormData.categoria);\r\n    formData.append(\"avatarUrl\", mascotaFormData.avatarUrl);  // Agregar la URL actual si no se ha subido una imagen\r\n    formData.append(\"propietarioId\", mascotaFormData.propietarioId);  // Asociar la mascota al usuario actual\r\n\r\n    // Solo agregar el archivo si se seleccionó uno\r\n    if (selectedFile) {\r\n      formData.append(\"file\", selectedFile);\r\n    }\r\n\r\n    try {\r\n      // Realizar la petición POST al servidor\r\n      await axios.post(\"http://localhost:3000/api/mascotas/nueva\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      setSuccessMessage(\"Mascota registrada correctamente.\");\r\n      window.location.reload();  // Refrescar la página al registrar una nueva mascota\r\n    } catch (error) {\r\n      setErrorMessage(\"Error al registrar la mascota. Intenta nuevamente.\");\r\n      console.error(\"Error al registrar la mascota:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mascota-form__container\">\r\n      {/* Contenedor del nombre del propietario */}\r\n      <div className=\"mascota-form__owner-container\">\r\n        <h2 className=\"mascota-form__owner\">Propietario:</h2>\r\n        <p className=\"mascota-form__email\">{mascotaFormData.emailPropietario}</p> {/* Mostrar el email del propietario */}\r\n      </div>\r\n\r\n      <div className=\"mascota-form__form-wrapper\">\r\n        <h2 className=\"mascota-form__title\">Registrar Nueva Mascota</h2>\r\n        <form onSubmit={handleSubmit} className=\"mascota-form__form\">\r\n          {/* Input para agregar foto */}\r\n          <div className=\"mascota-form__form-group\">\r\n            <label htmlFor=\"avatar\" className=\"mascota-form__label\">Agregar Foto</label>\r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              className=\"mascota-form__input-file\"\r\n              onChange={handleFileChange}\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mascota-form__avatar-container\">\r\n            <img\r\n              src={mascotaFormData.avatarUrl || \"https://via.placeholder.com/150\"}\r\n              alt=\"Mascota Avatar\"\r\n              className=\"mascota-form__avatar\"\r\n            />\r\n            <div className=\"mascota-form__avatar-overlay\">\r\n              <span>Editar</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Los demás campos del formulario */}\r\n          <div className=\"mascota-form__form-group\">\r\n            <label htmlFor=\"nombreMascota\" className=\"mascota-form__label\">Nombre *</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nombreMascota\"\r\n              name=\"nombreMascota\"\r\n              className=\"mascota-form__input\"\r\n              value={mascotaFormData.nombreMascota}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Otros campos como Especie, Raza, Edad, etc. */}\r\n          <button type=\"submit\" className=\"mascota-form__btn btn btn-primary mt-3\">\r\n            Registrar Mascota\r\n          </button>\r\n          {successMessage && <p className=\"mascota-form__success-message text-success\">{successMessage}</p>}\r\n          {errorMessage && <p className=\"mascota-form__error-message text-danger\">{errorMessage}</p>}\r\n        </form>\r\n      </div>\r\n\r\n      {/* Sección para mostrar las mascotas registradas */}\r\n      <div className=\"mascotas__container\">\r\n        {mascotas.length > 0 ? (\r\n          <div className=\"mascotas__list\">\r\n            {mascotas.map((mascota) => {\r\n              const avatarUrl = mascota[10] || \"https://via.placeholder.com/150\";  // Verificar si tiene imagen\r\n              const completeAvatarUrl = avatarUrl.startsWith('http')\r\n                ? avatarUrl  // Si es una URL externa\r\n                : `http://localhost:3000${avatarUrl}`;  // Si es una imagen en el servidor\r\n\r\n              return (\r\n                <div className=\"mascota__card\" key={mascota[0]}>\r\n                  <img src={completeAvatarUrl} alt=\"Mascota Avatar\" className=\"mascota__card-img\" />\r\n                  <div className=\"mascota__card-info\">\r\n                    <h3>{mascota[2]}</h3>\r\n                    <p>Especie: {mascota[3]}</p>\r\n                    <p>Edad: {mascota[7]} años</p>\r\n                    <p>Peso: {mascota[5]} kg</p>\r\n                    <p>Categoría: {mascota[9]}</p>\r\n                    <button className=\"btn btn-primary\">Ver Detalles</button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <p>No tienes mascotas registradas.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}