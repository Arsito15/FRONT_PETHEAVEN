{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Solve\\\\OneDrive\\\\Escritorio\\\\semestre 8\\\\desarrollo web\\\\react\\\\FRONT_PETHEAVEN\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\"; // Asegúrate de que la importación es correcta\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null); // Inicialmente en null\n  const [userData, setUserData] = useState(null); // Almacena los datos del usuario\n  const navigate = useNavigate();\n  const obtenerDatosUsuario = useCallback(async token => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/api/me\", {\n        headers: {\n          \"x-access-token\": token\n        } // Enviando el token en el header\n      });\n      console.log(\"Datos del usuario recibidos de la API:\", response.data); // Verificar si 'telefono' está presente\n      setUserData(response.data); // Guardar los datos del usuario en el contexto\n    } catch (error) {\n      console.error(\"Error al obtener los datos del usuario:\", error);\n      localStorage.removeItem(\"token\");\n      setIsAuthenticated(false);\n      setUserData(null);\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token en localStorage: \", token); // Verificar el token en localStorage\n\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp > currentTime) {\n          setIsAuthenticated(true);\n          console.log(\"Token válido, autenticación establecida.\");\n          obtenerDatosUsuario(token); // Obtener los datos del usuario\n        } else {\n          console.log(\"Token expirado, redirigiendo al login.\");\n          localStorage.removeItem(\"token\");\n          setIsAuthenticated(false);\n          setUserData(null);\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Error al decodificar el token:\", error);\n        setIsAuthenticated(false);\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n    } else {\n      setIsAuthenticated(false); // Si no hay token en localStorage, no está autenticado\n      navigate(\"/login\");\n    }\n  }, [navigate, obtenerDatosUsuario]); // Agregamos obtenerDatosUsuario como dependencia del useEffect\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setIsAuthenticated(false);\n    setUserData(null);\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      userData,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n_s(AuthProvider, \"uhRc8W9bvhGterTIHoMFKkm+xtU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return React.useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useNavigate","jwtDecode","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userData","setUserData","navigate","obtenerDatosUsuario","token","response","get","headers","console","log","data","error","localStorage","removeItem","getItem","decodedToken","currentTime","Date","now","exp","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["C:/Users/Solve/OneDrive/Escritorio/semestre 8/desarrollo web/react/FRONT_PETHEAVEN/src/AuthContext.js"],"sourcesContent":["  import React, { createContext, useState, useEffect, useCallback } from \"react\";\r\n  import { useNavigate } from \"react-router-dom\";\r\n  import {jwtDecode} from \"jwt-decode\";  // Asegúrate de que la importación es correcta\r\n  import axios from \"axios\";\r\n\r\n  const AuthContext = createContext();\r\n\r\n  export const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);  // Inicialmente en null\r\n    const [userData, setUserData] = useState(null);  // Almacena los datos del usuario\r\n    const navigate = useNavigate();\r\n\r\n    const obtenerDatosUsuario = useCallback(async (token) => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/api/me\", {\r\n          headers: { \"x-access-token\": token },  // Enviando el token en el header\r\n        });\r\n        console.log(\"Datos del usuario recibidos de la API:\", response.data); // Verificar si 'telefono' está presente\r\n        setUserData(response.data);  // Guardar los datos del usuario en el contexto\r\n      } catch (error) {\r\n        console.error(\"Error al obtener los datos del usuario:\", error);\r\n        localStorage.removeItem(\"token\");\r\n        setIsAuthenticated(false);\r\n        setUserData(null);\r\n        navigate(\"/login\");\r\n      }\r\n    }, [navigate]);\r\n    \r\n\r\n    useEffect(() => {\r\n      const token = localStorage.getItem(\"token\");\r\n      console.log(\"Token en localStorage: \", token);  // Verificar el token en localStorage\r\n\r\n      if (token) {\r\n        try {\r\n          const decodedToken = jwtDecode(token);\r\n          const currentTime = Date.now() / 1000;\r\n\r\n          if (decodedToken.exp > currentTime) {\r\n            setIsAuthenticated(true);\r\n            console.log(\"Token válido, autenticación establecida.\");\r\n            obtenerDatosUsuario(token);  // Obtener los datos del usuario\r\n          } else {\r\n            console.log(\"Token expirado, redirigiendo al login.\");\r\n            localStorage.removeItem(\"token\");\r\n            setIsAuthenticated(false);\r\n            setUserData(null);\r\n            navigate(\"/login\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error al decodificar el token:\", error);\r\n          setIsAuthenticated(false);\r\n          localStorage.removeItem(\"token\");\r\n          navigate(\"/login\");\r\n        }\r\n      } else {\r\n        setIsAuthenticated(false);  // Si no hay token en localStorage, no está autenticado\r\n        navigate(\"/login\");\r\n      }\r\n    }, [navigate, obtenerDatosUsuario]);  // Agregamos obtenerDatosUsuario como dependencia del useEffect\r\n\r\n    const logout = () => {\r\n      localStorage.removeItem(\"token\");\r\n      setIsAuthenticated(false);\r\n      setUserData(null);\r\n      navigate(\"/login\");\r\n    };\r\n\r\n    return (\r\n      <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, userData, logout }}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n    );\r\n  };\r\n\r\n  export const useAuth = () => React.useContext(AuthContext);\r\n"],"mappings":";;;AAAE,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,SAAS,QAAO,YAAY,CAAC,CAAE;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC/D,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACjD,MAAMgB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,mBAAmB,GAAGf,WAAW,CAAC,MAAOgB,KAAK,IAAK;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,8BAA8B,EAAE;QAC/DC,OAAO,EAAE;UAAE,gBAAgB,EAAEH;QAAM,CAAC,CAAG;MACzC,CAAC,CAAC;MACFI,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MACtET,WAAW,CAACI,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAE;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/DC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAChCd,kBAAkB,CAAC,KAAK,CAAC;MACzBE,WAAW,CAAC,IAAI,CAAC;MACjBC,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAGdf,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAGQ,YAAY,CAACE,OAAO,CAAC,OAAO,CAAC;IAC3CN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,KAAK,CAAC,CAAC,CAAE;;IAEhD,IAAIA,KAAK,EAAE;MACT,IAAI;QACF,MAAMW,YAAY,GAAGzB,SAAS,CAACc,KAAK,CAAC;QACrC,MAAMY,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;QAErC,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;UAClCjB,kBAAkB,CAAC,IAAI,CAAC;UACxBS,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;UACvDN,mBAAmB,CAACC,KAAK,CAAC,CAAC,CAAE;QAC/B,CAAC,MAAM;UACLI,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;UACrDG,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;UAChCd,kBAAkB,CAAC,KAAK,CAAC;UACzBE,WAAW,CAAC,IAAI,CAAC;UACjBC,QAAQ,CAAC,QAAQ,CAAC;QACpB;MACF,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDZ,kBAAkB,CAAC,KAAK,CAAC;QACzBa,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;QAChCX,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,MAAM;MACLH,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAE;MAC5BG,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEC,mBAAmB,CAAC,CAAC,CAAC,CAAE;;EAEtC,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACnBR,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCd,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,IAAI,CAAC;IACjBC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,eAAe;MAAEC,kBAAkB;MAAEC,QAAQ;MAAEoB;IAAO,CAAE;IAAAxB,QAAA,EACpFA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CAlEWF,YAAY;EAAA,QAGNN,WAAW;AAAA;AAAAsC,EAAA,GAHjBhC,YAAY;AAoEzB,OAAO,MAAMiC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7C,KAAK,CAAC8C,UAAU,CAACpC,WAAW,CAAC;AAAA;AAACmC,GAAA,CAA9CD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}