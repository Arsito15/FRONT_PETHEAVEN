{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Solve\\\\OneDrive\\\\Escritorio\\\\semestre 8\\\\desarrollo web\\\\react\\\\FRONT_PETHEAVEN\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./AuthContext\";\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google'; // Importa Google OAuth components\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '471447306458-j42j2q10c6b0ukglpu0bcg5kb6i9ben2.apps.googleusercontent.com'; // Reemplaza con tu Client ID\n\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    setIsAuthenticated\n  } = useAuth();\n\n  // Manejar el login con correo y contraseña\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3000/api/login\", {\n        correo: email,\n        password\n      });\n      if (response.data.token) {\n        console.log(\"Token recibido: \", response.data.token); // Verificar el token recibido\n        localStorage.setItem(\"token\", response.data.token);\n        setIsAuthenticated(true);\n        console.log(\"Autenticación establecida: \", true); // Verificar que se está estableciendo la autenticación\n        navigate(\"/\"); // Redirige a la página principal\n      } else {\n        setErrorMessage(\"Login fallido. Verifica tus credenciales.\");\n        console.error(\"Error en login tradicional: Login fallido. Respuesta de backend:\", response);\n      }\n    } catch (error) {\n      setErrorMessage(\"Error al iniciar sesión. Por favor, inténtalo de nuevo.\");\n      console.error(\"Error en login tradicional:\", error);\n    }\n  };\n  const onSuccess = async credentialResponse => {\n    console.log(\"Login exitoso con Google. Credencial recibida:\", credentialResponse);\n    try {\n      const res = await axios.post(\"http://localhost:3000/api/google-login\", {\n        tokenId: credentialResponse.credential\n      });\n      if (res.data.token) {\n        console.log(\"Token recibido de Google: \", res.data.token); // Verificar el token de Google\n        localStorage.setItem(\"token\", res.data.token); // Guarda el JWT del backend\n        setIsAuthenticated(true);\n        console.log(\"Autenticación con Google establecida: \", true); // Verificar autenticación\n        navigate(\"/\"); // Redirigir a la página principal\n      } else {\n        setErrorMessage(\"Error en la autenticación con Google.\");\n        console.error(\"Error en autenticación con Google. Respuesta de backend:\", res);\n      }\n    } catch (error) {\n      console.error(\"Error en autenticación con Google:\", error);\n      setErrorMessage(\"Error al autenticar con Google.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Correo Electr\\xF3nico:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n          clientId: clientId,\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            onSuccess: onSuccess,\n            onError: onFailure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"/5BiFdI8CsBqDgutyQ/phiZZ8wg=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useAuth","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","clientId","Login","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","setIsAuthenticated","handleLogin","e","preventDefault","response","post","correo","data","token","console","log","localStorage","setItem","error","onSuccess","credentialResponse","res","tokenId","credential","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","onError","onFailure","_c","$RefreshReg$"],"sources":["C:/Users/Solve/OneDrive/Escritorio/semestre 8/desarrollo web/react/FRONT_PETHEAVEN/src/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';  // Importa Google OAuth components\r\nimport \"./Login.css\";\r\n\r\nconst clientId = '471447306458-j42j2q10c6b0ukglpu0bcg5kb6i9ben2.apps.googleusercontent.com';  // Reemplaza con tu Client ID\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { setIsAuthenticated } = useAuth();\r\n\r\n  // Manejar el login con correo y contraseña\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/api/login\", {\r\n        correo: email,\r\n        password,\r\n      });\r\n  \r\n      if (response.data.token) {\r\n        console.log(\"Token recibido: \", response.data.token);  // Verificar el token recibido\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        setIsAuthenticated(true);\r\n        console.log(\"Autenticación establecida: \", true);  // Verificar que se está estableciendo la autenticación\r\n        navigate(\"/\");  // Redirige a la página principal\r\n      } else {\r\n        setErrorMessage(\"Login fallido. Verifica tus credenciales.\");\r\n        console.error(\"Error en login tradicional: Login fallido. Respuesta de backend:\", response);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"Error al iniciar sesión. Por favor, inténtalo de nuevo.\");\r\n      console.error(\"Error en login tradicional:\", error);\r\n    }\r\n  };\r\n  \r\n  const onSuccess = async (credentialResponse) => {\r\n    console.log(\"Login exitoso con Google. Credencial recibida:\", credentialResponse);\r\n  \r\n    try {\r\n      const res = await axios.post(\"http://localhost:3000/api/google-login\", {\r\n        tokenId: credentialResponse.credential,\r\n      });\r\n  \r\n      if (res.data.token) {\r\n        console.log(\"Token recibido de Google: \", res.data.token);  // Verificar el token de Google\r\n        localStorage.setItem(\"token\", res.data.token);  // Guarda el JWT del backend\r\n        setIsAuthenticated(true);\r\n        console.log(\"Autenticación con Google establecida: \", true);  // Verificar autenticación\r\n        navigate(\"/\");  // Redirigir a la página principal\r\n      } else {\r\n        setErrorMessage(\"Error en la autenticación con Google.\");\r\n        console.error(\"Error en autenticación con Google. Respuesta de backend:\", res);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error en autenticación con Google:\", error);\r\n      setErrorMessage(\"Error al autenticar con Google.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Iniciar Sesión</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Correo Electrónico:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Contraseña:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        <div className=\"buttons-container\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">Iniciar Sesión</button>\r\n\r\n          {/* Botón de Google Login */}\r\n          <GoogleOAuthProvider clientId={clientId}>\r\n            <GoogleLogin\r\n              onSuccess={onSuccess}\r\n              onError={onFailure}\r\n            />\r\n          </GoogleOAuthProvider>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}