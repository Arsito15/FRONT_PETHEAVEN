{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Solve\\\\OneDrive\\\\Escritorio\\\\semestre 8\\\\desarrollo web\\\\react\\\\FRONT_PETHEAVEN\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\n// Crear el contexto de autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Proveedor del contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Al montar el componente, verifica si hay un token en el localStorage\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      const currentTime = Date.now() / 1000; // Tiempo actual en segundos\n\n      // Verificar si el token ha expirado\n      if (decodedToken.exp > currentTime) {\n        setIsAuthenticated(true);\n      } else {\n        // Si el token ha expirado, eliminarlo\n        localStorage.removeItem(\"token\");\n        setIsAuthenticated(false);\n        navigate(\"/login\");\n      }\n    } else {\n      setIsAuthenticated(false);\n    }\n  }, [navigate]);\n\n  // Función para cerrar sesión\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setIsAuthenticated(false);\n    navigate(\"/login\"); // Redirigir al login después de cerrar sesión\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook para usar el contexto en otros componentes\n_s(AuthProvider, \"h+xcTbG3Lgr87EDneWrcj9j4fAU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return React.useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","navigate","token","localStorage","getItem","decodedToken","currentTime","Date","now","exp","removeItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["C:/Users/Solve/OneDrive/Escritorio/semestre 8/desarrollo web/react/FRONT_PETHEAVEN/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\n// Crear el contexto de autenticación\r\nconst AuthContext = createContext();\r\n\r\n// Proveedor del contexto\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Al montar el componente, verifica si hay un token en el localStorage\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;  // Tiempo actual en segundos\r\n\r\n      // Verificar si el token ha expirado\r\n      if (decodedToken.exp > currentTime) {\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        // Si el token ha expirado, eliminarlo\r\n        localStorage.removeItem(\"token\");\r\n        setIsAuthenticated(false);\r\n        navigate(\"/login\");\r\n      }\r\n    } else {\r\n      setIsAuthenticated(false);\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Función para cerrar sesión\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setIsAuthenticated(false);\r\n    navigate(\"/login\");  // Redirigir al login después de cerrar sesión\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar el contexto en otros componentes\r\nexport const useAuth = () => React.useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;;AAGtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACT,MAAMG,YAAY,GAAGb,SAAS,CAACU,KAAK,CAAC;MACrC,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAE;;MAExC;MACA,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;QAClCN,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,MAAM;QACL;QACAG,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCV,kBAAkB,CAAC,KAAK,CAAC;QACzBC,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,MAAM;MACLD,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnBR,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCV,kBAAkB,CAAC,KAAK,CAAC;IACzBC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;EACvB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,eAAe;MAAEC,kBAAkB;MAAEW;IAAO,CAAE;IAAAd,QAAA,EAC1EA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAnB,EAAA,CAxCaF,YAAY;EAAA,QAENL,WAAW;AAAA;AAAA2B,EAAA,GAFjBtB,YAAY;AAyCzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjC,KAAK,CAACkC,UAAU,CAAC1B,WAAW,CAAC;AAAA;AAACyB,GAAA,CAA9CD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}